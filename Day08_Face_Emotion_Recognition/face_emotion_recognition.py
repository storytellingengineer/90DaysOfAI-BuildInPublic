# -*- coding: utf-8 -*-
"""face_emotion_recognition.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11pjFzmpMyrCfeEDe8OzT3aHo3TDwdTC6
"""

# Install necessary libraries
!pip install opencv-python deepface

# Import libraries
import cv2
from deepface import DeepFace
from google.colab.patches import cv2_imshow

# Load Haar cascade for face detection
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

"""A **Haar cascade classifier** is a machine learning-based algorithm used for object detection, particularly facial detection, in images and videos. It works by training a classifier on a set of positive (images containing the object) and negative (images without the object) samples. The classifier then scans an input image, looking for regions that match the learned patterns."""

# Upload an image
from google.colab import files
uploaded = files.upload()

for filename in uploaded.keys():
    # Read the uploaded image
    img = cv2.imread(filename)

    # Convert image to grayscale
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

    # Detect faces
    faces = face_cascade.detectMultiScale(gray, 1.3, 5)

    # Loop over faces
    for (x, y, w, h) in faces:
        roi = img[y:y+h, x:x+w]
        try:
            result = DeepFace.analyze(roi, actions=['emotion'], enforce_detection=False)
            emotion = result[0]['dominant_emotion']

            # Draw rectangle around face
            cv2.rectangle(img, (x, y), (x+w, y+h), (255, 0, 0), 2)
            # Put detected emotion text
            cv2.putText(img, emotion, (x, y-10), cv2.FONT_HERSHEY_SIMPLEX, 0.9, (36,255,12), 2)
        except Exception as e:
            print("Emotion detection failed:", e)

    # Display output
    cv2_imshow(img)

