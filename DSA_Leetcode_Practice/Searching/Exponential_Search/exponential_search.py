# -*- coding: utf-8 -*-
"""exponential_search.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xHLB1d8yus5BJsQJ0RBgJyebT1KjQD0B
"""

def exponential_search(arr, target):
    """
    Exponential Search Algorithm

    Args:
    arr (list): Sorted list of elements
    target (int or float): Element to search for

    Returns:
    int: Index of target if found, else -1
    """
    # If the element is at the first index
    if arr[0] == target:
        return 0

    # Find range for binary search
    n = len(arr)
    i = 1
    while i < n and arr[i] <= target:
        i = i * 2  # Exponentially increase the index

    # Perform binary search between the found range
    low = i // 2
    high = min(i, n - 1)
    return binary_search(arr, low, high, target)

def binary_search(arr, low, high, target):
    """
    Helper function for binary search

    Args:
    arr (list): Sorted list of elements
    low (int): Low index
    high (int): High index
    target (int or float): Element to search for

    Returns:
    int: Index of target if found, else -1
    """
    while low <= high:
        mid = (low + high) // 2

        if arr[mid] == target:
            return mid
        elif arr[mid] < target:
            low = mid + 1
        else:
            high = mid - 1

    return -1

# Example usage
if __name__ == "__main__":
    data = [10, 20, 30, 40, 50, 60, 70, 80, 90]
    target = 50
    index = exponential_search(data, target)

    if index != -1:
        print(f"Element {target} found at index {index}")
    else:
        print(f"Element {target} not found in array")

