# -*- coding: utf-8 -*-
"""interpolation_search.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xHLB1d8yus5BJsQJ0RBgJyebT1KjQD0B
"""

def interpolation_search(arr, target):
    """
    Interpolation Search Algorithm

    Args:
    arr (list): Sorted list of uniformly distributed elements
    target (int or float): Element to search for

    Returns:
    int: Index of target if found, else -1
    """
    low = 0
    high = len(arr) - 1

    while low <= high and target >= arr[low] and target <= arr[high]:
        # Estimate the position
        if arr[high] == arr[low]:
            if arr[low] == target:
                return low
            return -1

        pos = low + ((high - low) * (target - arr[low])) // (arr[high] - arr[low])

        if pos < 0 or pos >= len(arr):
            return -1

        if arr[pos] == target:
            return pos
        elif arr[pos] < target:
            low = pos + 1
        else:
            high = pos - 1

    return -1

# Example usage
if __name__ == "__main__":
    data = [10, 20, 30, 40, 50, 60, 70, 80, 90]
    target = 70
    index = interpolation_search(data, target)

    if index != -1:
        print(f"Element {target} found at index {index}")
    else:
        print(f"Element {target} not found in array")

