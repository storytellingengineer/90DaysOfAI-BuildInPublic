# -*- coding: utf-8 -*-
"""ternary_search.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xHLB1d8yus5BJsQJ0RBgJyebT1KjQD0B
"""

def ternary_search(arr, left, right, target):
    """
    Ternary Search Algorithm

    Args:
    arr (list): Sorted list of elements
    left (int): Left index (starting index of the search range)
    right (int): Right index (ending index of the search range)
    target (int or float): Element to search for

    Returns:
    int: Index of target if found, else -1
    """
    if right >= left:
        # Divide the range into 3 parts
        mid1 = left + (right - left) // 3
        mid2 = right - (right - left) // 3

        # Check if the target is at mid1 or mid2
        if arr[mid1] == target:
            return mid1
        if arr[mid2] == target:
            return mid2

        # If the target is in the left part
        if target < arr[mid1]:
            return ternary_search(arr, left, mid1 - 1, target)

        # If the target is in the right part
        elif target > arr[mid2]:
            return ternary_search(arr, mid2 + 1, right, target)

        # If the target is in the middle part
        else:
            return ternary_search(arr, mid1 + 1, mid2 - 1, target)

    return -1

# 🔍 Example usage
if __name__ == "__main__":
    data = [10, 20, 30, 40, 50, 60, 70, 80, 90]
    target = 50
    index = ternary_search(data, 0, len(data) - 1, target)

    if index != -1:
        print(f"Element {target} found at index {index}")
    else:
        print(f"Element {target} not found in array")

