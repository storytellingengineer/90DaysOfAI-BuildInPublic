# -*- coding: utf-8 -*-
"""resume_matcher.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19caX_owS_Ffv0iT2RjImQO9HR8BPVcYh

## Project Idea: Resume Screening with NLP

Use Case:

HR departments often receive hundreds of resumes for a job role. Manually screening these resumes is time-consuming. Letâ€™s build a Resume Keyword Extractor & Matching Tool that takes a resume text and matches it with job descriptions based on keyword similarity.
"""

import os
import string
import spacy
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

# Load SpaCy model
nlp = spacy.load("en_core_web_sm")

def preprocess(text):
    doc = nlp(text.lower())
    tokens = [
        token.lemma_ for token in doc
        if token.is_alpha and not token.is_stop
    ]
    return ' '.join(tokens)

def load_text(file_path):
    with open(file_path, 'r', encoding='utf-8') as file:
        return file.read()

def get_similarity_score(resume_text, jd_text):
    documents = [preprocess(resume_text), preprocess(jd_text)]
    vectorizer = TfidfVectorizer()
    tfidf_matrix = vectorizer.fit_transform(documents)
    score = cosine_similarity(tfidf_matrix[0:1], tfidf_matrix[1:2])[0][0]
    return round(score * 100, 2)

if __name__ == "__main__":
    resume_path = os.path.join("data", "sample_resume.txt")
    jd_path = os.path.join("data", "job_description.txt")

    resume = load_text(resume_path)
    jd = load_text(jd_path)

    score = get_similarity_score(resume, jd)
    print(f"ðŸ“Š Resume matches Job Description by: {score}%")

